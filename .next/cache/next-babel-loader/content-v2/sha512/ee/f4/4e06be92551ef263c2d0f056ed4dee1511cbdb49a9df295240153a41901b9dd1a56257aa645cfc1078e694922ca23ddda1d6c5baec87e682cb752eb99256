{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\aluraquiz-startrek\\\\pages\\\\quiz.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport db from '../db.json';\nimport Widget from '../src/components/Widget';\nimport QuizLogo from '../src/components/QuizLogo';\nimport QuizBackground from '../src/components/QuizBackground';\nimport QuizContainer from '../src/components/QuizContainer';\nimport Button from '../src/components/Button';\n\nfunction LoadingScreen() {\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Carregando...\"), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"[Desafio do Loading]\"));\n}\n\nfunction QuestionWidget({\n  question,\n  questionIndex,\n  totalQuestions\n}) {\n  const questionId = `question__${questionIndex}`;\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, `Pergunta ${questionIndex + 1} de ${totalQuestions}`)), __jsx(\"img\", {\n    alt: \"Descri\\xE7\\xE3o\",\n    style: {\n      width: '100%',\n      height: '150px',\n      objectFit: 'display'\n    },\n    src: question.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, question.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, question.description), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, question.alternatives.map((alternative, alternativeIndex) => {\n    console.log('Fala um A pra voce ver!');\n    const alternativeId = `alternative__${alternativeIndex}`;\n    return __jsx(Widget.Topic, {\n      as: \"label\",\n      htmlFor: alternativeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      style: {\n        display: 'none'\n      },\n      id: alternativeId,\n      name: questionId,\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }), alternative);\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Confirmar\"))));\n}\n\nconst screenState = {\n  QUIZ: 'QUIZ',\n  LOADING: 'LOADING',\n  RESULT: 'RESULT'\n};\nexport default function QuizPage() {\n  const screenState = screenState.QUIZ;\n  const totalQuestions = db.questions.length;\n  const questionIndex = 0;\n  const question = db.questions[questionIndex];\n  return __jsx(QuizBackground, {\n    backgroundImage: db.bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(QuizContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(QuizLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), screenState === screenState.QUIZ && __jsx(QuestionWidget, {\n    question: question,\n    questionIndex: questionIndex,\n    totalQuestions: totalQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), screenState === screenState.LOADING && __jsx(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 57\n    }\n  }), screenState === screenState.RESULT && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 56\n    }\n  }, \" voce acertou x questoes, parab\\xE9ns!\")));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/aluraquiz-startrek/pages/quiz.js"],"names":["React","db","Widget","QuizLogo","QuizBackground","QuizContainer","Button","LoadingScreen","QuestionWidget","question","questionIndex","totalQuestions","questionId","width","height","objectFit","image","title","description","alternatives","map","alternative","alternativeIndex","console","log","alternativeId","display","screenState","QUIZ","LOADING","RESULT","QuizPage","questions","length","bg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport db from '../db.json';\r\n\r\nimport Widget from '../src/components/Widget';\r\nimport QuizLogo from '../src/components/QuizLogo';\r\nimport QuizBackground from '../src/components/QuizBackground';\r\nimport QuizContainer from '../src/components/QuizContainer';\r\nimport Button from '../src/components/Button';\r\n\r\nfunction LoadingScreen() {\r\n    return (\r\n        <Widget>\r\n            <Widget.Header>\r\n                Carregando...\r\n            </Widget.Header>\r\n\r\n            <Widget.Content>\r\n                [Desafio do Loading]\r\n            </Widget.Content>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nfunction QuestionWidget( {\r\n    question, \r\n    questionIndex, \r\n    totalQuestions\r\n} ) {\r\n    const questionId =`question__${questionIndex}`\r\n    return (\r\n        <Widget>\r\n            <Widget.Header>\r\n                <h3>\r\n                    {`Pergunta ${questionIndex  + 1} de ${totalQuestions}`}\r\n                </h3>\r\n            </Widget.Header>\r\n            <img\r\n                alt=\"Descrição\"\r\n                style = \r\n                {\r\n                    {\r\n                        width:'100%', height:'150px', objectFit:'display',\r\n                    }\r\n                }\r\n                src= {question.image}\r\n            \r\n            />\r\n            <Widget.Content>\r\n                <h2>\r\n                    {question.title}\r\n                </h2>\r\n                <p>\r\n                    {question.description}\r\n                </p>\r\n                <form>\r\n                    {question.alternatives.map( (alternative, alternativeIndex) => {\r\n                        console.log('Fala um A pra voce ver!');\r\n                        const alternativeId = `alternative__${alternativeIndex}`;\r\n\r\n                        return (\r\n                                <Widget.Topic as=\"label\" htmlFor ={alternativeId} >\r\n                                    <input\r\n                                    style={{display:'none'}}\r\n                                    id={alternativeId}\r\n                                    name={questionId} \r\n                                    type=\"radio\" \r\n                                    />\r\n                                    {alternative}\r\n                                </Widget.Topic>\r\n                                );\r\n                            }\r\n                        )\r\n                    }\r\n                    { /*<pre>\r\n                        {JSON.stringify(question, null, 4)}\r\n                    </pre> */}\r\n\r\n                    <Button>\r\n                        Confirmar\r\n                    </Button>\r\n                </form>\r\n            </Widget.Content>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nconst screenState = {\r\n    QUIZ:'QUIZ',\r\n    LOADING:'LOADING',\r\n    RESULT:'RESULT',\r\n};\r\n\r\nexport default function QuizPage() {\r\n    const screenState = screenState.QUIZ;\r\n    const totalQuestions = db.questions.length\r\n    const questionIndex = 0;\r\n    const question = db.questions[questionIndex];\r\n\r\n    return (  \r\n        <QuizBackground backgroundImage={db.bg}>\r\n            <QuizContainer>\r\n                <QuizLogo />\r\n                {screenState === screenState.QUIZ && (\r\n                    <QuestionWidget\r\n                    question={question} \r\n                    questionIndex={questionIndex} \r\n                    totalQuestions={totalQuestions} \r\n                    />\r\n                )}\r\n                {screenState === screenState.LOADING && <LoadingScreen />}\r\n\r\n                {screenState === screenState.RESULT && <div> voce acertou x questoes, parabéns!</div> }\r\n            </QuizContainer>\r\n        </QuizBackground>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
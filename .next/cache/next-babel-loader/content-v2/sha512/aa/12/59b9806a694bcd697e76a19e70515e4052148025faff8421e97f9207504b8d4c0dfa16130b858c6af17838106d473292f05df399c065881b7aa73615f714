{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\aluraquiz-startrek\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport db from '../db.json';\nimport Widget from '../src/components/Widget';\nimport QuizLogo from '../src/components/QuizLogo';\nimport QuizBackground from '../src/components/QuizBackground';\nimport Footer from '../src/components/Footer';\nimport GitHubCorner from '../src/components/GitHubCorner';\nimport Input from '../src/components/Input';\nimport Button from '../src/components/Button';\nexport const BackgroundImage = styled.div.withConfig({\n  displayName: \"pages__BackgroundImage\",\n  componentId: \"sc-1wbo52z-0\"\n})([\"background-image:url(\", \");display:flex;min-height:100vh;background-size:100% auto;background-repeat:no-repeat;background-attachment:scroll;\"], db.bg);\nexport const QuizContainer = styled.div.withConfig({\n  displayName: \"pages__QuizContainer\",\n  componentId: \"sc-1wbo52z-1\"\n})([\"width:100%;max-width:350px;margin:1% 8%;@media screen and (max-width:500px){margin:auto;padding:15px;}\"]);\nexport default function Home() {\n  const router = useRouter();\n  const [name, setName] = React.useState('');\n  console.log('retorno do use state', name);\n  return __jsx(QuizBackground, {\n    backgroundImage: db.bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"AluraQuiz - Star Trek\")), __jsx(QuizContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(QuizLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, db.title)), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, db.description), __jsx(\"form\", {\n    onSubmit: function (infosDoEvento) {\n      infosDoEvento.preventDefault();\n      router.push(`/quiz?name=${name}`);\n      console.log('Fazendo uma submissÃ£o por meio do react');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    name: \"nomeDoUsuario\",\n    onChange: infosDoEvento => setName(infosDoEvento.target.value),\n    placeholder: \"diga seu nome\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    disabled: name.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Jogar\")))), __jsx(Widget, {\n    as: motion.section,\n    transition: {\n      delay: 0.5,\n      duration: 0.5\n    },\n    variants: {\n      show: {\n        opacity: 1\n      },\n      hidden: {\n        opacity: 0\n      }\n    },\n    initial: \"hidden\",\n    animate: \"show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Quizes da Galera\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, db.external.map(linkExterno => {\n    const [projectName, githubUser] = linkExterno.replace(/\\//g, '').replace('https:', '').replace('.vercel.app', '').split('.');\n    return __jsx(\"li\", {\n      key: linkExterno,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, __jsx(Widget.Topic, {\n      as: Link,\n      href: `/quiz/${projectName}___${githubUser}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, `${githubUser}/${projectName}`));\n  })))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), __jsx(GitHubCorner, {\n    projectUrl: \"https://github.com/juniorsn1409/aluraquiz-startrek.git\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/aluraquiz-startrek/pages/index.js"],"names":["React","styled","Head","useRouter","db","Widget","QuizLogo","QuizBackground","Footer","GitHubCorner","Input","Button","BackgroundImage","div","bg","QuizContainer","Home","router","name","setName","useState","console","log","title","description","infosDoEvento","preventDefault","push","target","value","length","motion","section","delay","duration","show","opacity","hidden","external","map","linkExterno","projectName","githubUser","replace","split","Link"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,MAAMC,eAAe,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,qJACFT,EAAE,CAACU,EADD,CAArB;AAQP,OAAO,MAAMC,aAAa,GAAGd,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,8GAAnB;AAWP,eAAe,SAASG,IAAT,GAAgB;AAC7B,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,IAApC;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,eAAe,EAAEd,EAAE,CAACU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,EAAE,CAACmB,KAAR,CADF,CADF,EAIE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,EAAE,CAACoB,WAAP,CADF,EAEE;AACA,IAAA,QAAQ,EACN,UAAUC,aAAV,EACA;AACEA,MAAAA,aAAa,CAACC,cAAd;AACAT,MAAAA,MAAM,CAACU,IAAP,CAAa,cAAaT,IAAK,EAA/B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,QAAQ,EAAGG,aAAD,IAAmBN,OAAO,CAACM,aAAa,CAACG,MAAd,CAAqBC,KAAtB,CAFtC;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,KAAK,EAAEX,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEA,IAAI,CAACY,MAAL,KAAgB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF,CAFF,CAJF,CAFF,EA+BE,MAAC,MAAD;AACE,IAAA,EAAE,EAAEC,MAAM,CAACC,OADb;AAEE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAFd;AAGE,IAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADE;AAERC,MAAAA,MAAM,EAAE;AAAED,QAAAA,OAAO,EAAE;AAAX;AAFA,KAHZ;AAOE,IAAA,OAAO,EAAC,QAPV;AAQE,IAAA,OAAO,EAAC,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,EAAE,CAACkC,QAAH,CAAYC,GAAZ,CAAiBC,WAAD,IAAiB;AAChC,UAAM,CAACC,WAAD,EAAcC,UAAd,IAA4BF,WAAW,CAC1CG,OAD+B,CACvB,KADuB,EAChB,EADgB,EAE/BA,OAF+B,CAEvB,QAFuB,EAEb,EAFa,EAG/BA,OAH+B,CAGvB,aAHuB,EAGR,EAHQ,EAI/BC,KAJ+B,CAIzB,GAJyB,CAAlC;AAMA,WACE;AAAI,MAAA,GAAG,EAAEJ,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD,CAAQ,KAAR;AACE,MAAA,EAAE,EAAEK,IADN;AAEE,MAAA,IAAI,EAAG,SAAQJ,WAAY,MAAKC,UAAW,EAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,GAAEA,UAAW,IAAGD,WAAY,EAJhC,CADF,CADF;AAUD,GAjBA,CADH,CAFA,CAVF,CA/BF,EAiEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjEF,CAJF,EAuEE,MAAC,YAAD;AAAc,IAAA,UAAU,EAAC,wDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEF,CADF;AA2ED","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nimport db from '../db.json';\nimport Widget from '../src/components/Widget';\nimport QuizLogo from '../src/components/QuizLogo';\nimport QuizBackground from '../src/components/QuizBackground';\nimport Footer from '../src/components/Footer';\nimport GitHubCorner from '../src/components/GitHubCorner';\nimport Input from '../src/components/Input';\nimport Button from '../src/components/Button';\n\nexport const BackgroundImage = styled.div`\n  background-image: url(${db.bg});\n  display: flex;\n  min-height: 100vh;\n  background-size: 100% auto;\n  background-repeat:  no-repeat;\n  background-attachment:  scroll;\n`;\nexport const QuizContainer = styled.div`\n  width: 100%;\n  max-width: 350px;\n  margin:  1% 8%;\n\n  @media screen and (max-width: 500px) {\n    margin: auto;\n    padding: 15px;\n  }\n`;\n\nexport default function Home() {\n  const router = useRouter();\n  const [name, setName] = React.useState('');\n  console.log('retorno do use state', name);\n\n  return (  \n    <QuizBackground backgroundImage={db.bg}>\n      <Head>\n        <title>AluraQuiz - Star Trek</title>\n      </Head>\n      <QuizContainer>\n        <QuizLogo />\n        <Widget>\n          <Widget.Header>\n            <h1>{db.title}</h1>\n          </Widget.Header>\n          <Widget.Content>\n            <p>{db.description}</p>\n            <form \n            onSubmit={\n              function (infosDoEvento) \n              {\n                infosDoEvento.preventDefault();\n                router.push(`/quiz?name=${name}`);\n                console.log('Fazendo uma submissÃ£o por meio do react');\n              }\n            }\n            >\n              <Input\n                name=\"nomeDoUsuario\"\n                onChange={(infosDoEvento) => setName(infosDoEvento.target.value)}\n                placeholder=\"diga seu nome\"\n                value={name}\n              />\n              <Button type=\"submit\" disabled={name.length === 0}>\n                  Jogar\n              </Button>\n              </form>\n          </Widget.Content>\n        </Widget>\n\n        <Widget\n          as={motion.section}\n          transition={{ delay: 0.5, duration: 0.5 }}\n          variants={{\n            show: { opacity: 1 },\n            hidden: { opacity: 0 },\n          }}\n          initial=\"hidden\"\n          animate=\"show\"\n        >\n          <Widget.Content>\n          <h1>Quizes da Galera</h1>\n          <ul>\n            {db.external.map((linkExterno) => {\n              const [projectName, githubUser] = linkExterno\n                .replace(/\\//g, '')\n                .replace('https:', '')\n                .replace('.vercel.app', '')\n                .split('.');\n\n              return (\n                <li key={linkExterno}>\n                  <Widget.Topic\n                    as={Link}\n                    href={`/quiz/${projectName}___${githubUser}`}\n                  >\n                    {`${githubUser}/${projectName}`}\n                  </Widget.Topic>\n                </li>\n              );\n            })}\n          </ul>\n          </Widget.Content>\n        </Widget>\n        <Footer />\n      </QuizContainer>\n      <GitHubCorner projectUrl=\"https://github.com/juniorsn1409/aluraquiz-startrek.git\" />\n    </QuizBackground>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
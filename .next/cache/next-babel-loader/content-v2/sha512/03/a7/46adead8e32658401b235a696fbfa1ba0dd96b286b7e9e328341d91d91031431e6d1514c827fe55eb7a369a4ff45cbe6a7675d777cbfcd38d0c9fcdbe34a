{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\aluraquiz-startrek\\\\pages\\\\quiz.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport db from '../db.json';\nimport Widget from '../src/components/Widget';\nimport QuizLogo from '../src/components/QuizLogo';\nimport QuizBackground from '../src/components/QuizBackground';\nimport QuizContainer from '../src/components/QuizContainer';\nimport Button from '../src/components/Button';\n\nfunction LoadingScreen() {\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Carregando...\"), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"[Desafio do Loading]\"));\n}\n\n_c = LoadingScreen;\n\nfunction QuestionWidget(_ref) {\n  var _this = this;\n\n  var question = _ref.question,\n      questionIndex = _ref.questionIndex,\n      totalQuestions = _ref.totalQuestions;\n  var questionId = \"question__\".concat(questionIndex);\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Pergunta \".concat(questionIndex + 1, \" de \").concat(totalQuestions))), __jsx(\"img\", {\n    alt: \"Descri\\xE7\\xE3o\",\n    style: {\n      width: '100%',\n      height: '150px',\n      objectFit: 'display'\n    },\n    src: question.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, question.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, question.description), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, question.alternatives.map(function (alternative, alternativeIndex) {\n    console.log('Fala um A pra voce ver!');\n    var alternativeId = \"alternative__\".concat(alternativeIndex);\n    return __jsx(Widget.Topic, {\n      as: \"label\",\n      htmlFor: alternativeId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      style: {\n        display: 'none'\n      },\n      id: alternativeId,\n      name: questionId,\n      type: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }), alternative);\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Confirmar\"))));\n}\n\n_c2 = QuestionWidget;\nexport default function QuizPage() {\n  var screenState = 'LOADING';\n  var totalQuestions = db.questions.length;\n  var questionIndex = 0;\n  var question = db.questions[questionIndex];\n  return __jsx(QuizBackground, {\n    backgroundImage: db.bg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(QuizContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, screenState === 'QUIZ' && __jsx(QuestionWidget, {\n    question: question,\n    questionIndex: questionIndex,\n    totalQuestions: totalQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), screenState === 'LOADING' && __jsx(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 47\n    }\n  })));\n}\n_c3 = QuizPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoadingScreen\");\n$RefreshReg$(_c2, \"QuestionWidget\");\n$RefreshReg$(_c3, \"QuizPage\");","map":{"version":3,"sources":["C:/xampp/htdocs/aluraquiz-startrek/pages/quiz.js"],"names":["React","db","Widget","QuizLogo","QuizBackground","QuizContainer","Button","LoadingScreen","QuestionWidget","question","questionIndex","totalQuestions","questionId","width","height","objectFit","image","title","description","alternatives","map","alternative","alternativeIndex","console","log","alternativeId","display","QuizPage","screenState","questions","length","bg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport db from '../db.json';\r\n\r\nimport Widget from '../src/components/Widget';\r\nimport QuizLogo from '../src/components/QuizLogo';\r\nimport QuizBackground from '../src/components/QuizBackground';\r\nimport QuizContainer from '../src/components/QuizContainer';\r\nimport Button from '../src/components/Button';\r\n\r\nfunction LoadingScreen() {\r\n    return (\r\n        <Widget>\r\n            <Widget.Header>\r\n                Carregando...\r\n            </Widget.Header>\r\n\r\n            <Widget.Content>\r\n                [Desafio do Loading]\r\n            </Widget.Content>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nfunction QuestionWidget( {\r\n    question, \r\n    questionIndex, \r\n    totalQuestions\r\n} ) {\r\n    const questionId =`question__${questionIndex}`\r\n    return (\r\n        <Widget>\r\n            <Widget.Header>\r\n                <h3>\r\n                    {`Pergunta ${questionIndex  + 1} de ${totalQuestions}`}\r\n                </h3>\r\n            </Widget.Header>\r\n            <img\r\n                alt=\"Descrição\"\r\n                style = \r\n                {\r\n                    {\r\n                        width:'100%', height:'150px', objectFit:'display',\r\n                    }\r\n                }\r\n                src= {question.image}\r\n            \r\n            />\r\n            <Widget.Content>\r\n                <h2>\r\n                    {question.title}\r\n                </h2>\r\n                <p>\r\n                    {question.description}\r\n                </p>\r\n                <form>\r\n                    {question.alternatives.map( (alternative, alternativeIndex) => {\r\n                        console.log('Fala um A pra voce ver!');\r\n                        const alternativeId = `alternative__${alternativeIndex}`;\r\n\r\n                        return (\r\n                                <Widget.Topic as=\"label\" htmlFor ={alternativeId} >\r\n                                    <input\r\n                                    style={{display:'none'}}\r\n                                    id={alternativeId}\r\n                                    name={questionId} \r\n                                    type=\"radio\" \r\n                                    />\r\n                                    {alternative}\r\n                                </Widget.Topic>\r\n                                );\r\n                            }\r\n                        )\r\n                    }\r\n                    { /*<pre>\r\n                        {JSON.stringify(question, null, 4)}\r\n                    </pre> */}\r\n\r\n                    <Button>\r\n                        Confirmar\r\n                    </Button>\r\n                </form>\r\n            </Widget.Content>\r\n        </Widget>\r\n    );\r\n}\r\n\r\nexport default function QuizPage() {\r\n    const screenState = 'LOADING';\r\n    const totalQuestions = db.questions.length\r\n    const questionIndex = 0;\r\n    const question = db.questions[questionIndex];\r\n\r\n    return (  \r\n        <QuizBackground backgroundImage={db.bg}>\r\n            <QuizContainer>\r\n                {screenState === 'QUIZ' && (\r\n                    <QuestionWidget\r\n                    question={question} \r\n                    questionIndex={questionIndex} \r\n                    totalQuestions={totalQuestions} \r\n                    />\r\n                )}\r\n                {screenState === 'LOADING' && <LoadingScreen />}\r\n            </QuizContainer>\r\n        </QuizBackground>\r\n        );\r\n}"]},"metadata":{},"sourceType":"module"}
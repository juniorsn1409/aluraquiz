{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\aluraquiz-startrek\\\\pages\\\\quiz.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport db from '../db.json';\nimport Widget from '../src/components/Widget';\nimport QuizLogo from '../src/components/QuizLogo';\nimport QuizBackground from '../src/components/QuizBackground';\nimport QuizContainer from '../src/components/QuizContainer';\nimport Button from '../src/components/Button';\n\nfunction LoadingWidget() {\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Carregando...\"), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"[Desafio do Loading]\"));\n}\n\nfunction QuestionWidget({\n  question,\n  questionIndex,\n  totalQuestions,\n  onSubmit\n}) {\n  const questionId = `question__${questionIndex}`;\n  return __jsx(Widget, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Widget.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, `Pergunta ${questionIndex + 1} de ${totalQuestions}`)), __jsx(\"img\", {\n    alt: \"Descri\\xE7\\xE3o\",\n    style: {\n      width: '100%',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    src: question.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(Widget.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, question.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, question.description), __jsx(\"form\", {\n    onSubmit: infosDoEvento => {\n      infosDoEvento.preventDefault();\n      onSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, question.alternatives.map((alternative, alternativeIndex) => {\n    const alternativeId = `alternative__${alternativeIndex}`;\n    return __jsx(Widget.Topic, {\n      as: \"label\",\n      htmlFor: alternativeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(\"input\", {\n      // style={{ display: 'none' }}\n      id: alternativeId,\n      name: questionId,\n      type: \"radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), alternative);\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Confirmar\"))));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/aluraquiz-startrek/pages/quiz.js"],"names":["React","db","Widget","QuizLogo","QuizBackground","QuizContainer","Button","LoadingWidget","QuestionWidget","question","questionIndex","totalQuestions","onSubmit","questionId","width","height","objectFit","image","title","description","infosDoEvento","preventDefault","alternatives","map","alternative","alternativeIndex","alternativeId"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,aAAT,GAAyB;AACvB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAKE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CADF;AAWD;;AAED,SAASC,cAAT,CAAwB;AACtBC,EAAAA,QADsB;AAEtBC,EAAAA,aAFsB;AAGtBC,EAAAA,cAHsB;AAItBC,EAAAA;AAJsB,CAAxB,EAKG;AACD,QAAMC,UAAU,GAAI,aAAYH,aAAc,EAA9C;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,YAAWA,aAAa,GAAG,CAAE,OAAMC,cAAe,EADtD,CAFF,CADF,EAQE;AACE,IAAA,GAAG,EAAC,iBADN;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,OAFH;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAFT;AAOE,IAAA,GAAG,EAAEP,QAAQ,CAACQ,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACS,KADZ,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAACU,WADZ,CAJF,EAQE;AACE,IAAA,QAAQ,EAAGC,aAAD,IAAmB;AAC3BA,MAAAA,aAAa,CAACC,cAAd;AACAT,MAAAA,QAAQ;AACT,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,QAAQ,CAACa,YAAT,CAAsBC,GAAtB,CAA0B,CAACC,WAAD,EAAcC,gBAAd,KAAmC;AAC5D,UAAMC,aAAa,GAAI,gBAAeD,gBAAiB,EAAvD;AACA,WACE,MAAC,MAAD,CAAQ,KAAR;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,OAAO,EAAEC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE;AACA,MAAA,EAAE,EAAEA,aAFN;AAGE,MAAA,IAAI,EAAEb,UAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAUGW,WAVH,CADF;AAcD,GAhBA,CANH,EA2BE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3BF,CARF,CAjBF,CADF;AA4DD","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport db from '../db.json';\r\nimport Widget from '../src/components/Widget';\r\nimport QuizLogo from '../src/components/QuizLogo';\r\nimport QuizBackground from '../src/components/QuizBackground';\r\nimport QuizContainer from '../src/components/QuizContainer';\r\nimport Button from '../src/components/Button';\r\n\r\nfunction LoadingWidget() {\r\n  return (\r\n    <Widget>\r\n      <Widget.Header>\r\n        Carregando...\r\n      </Widget.Header>\r\n\r\n      <Widget.Content>\r\n        [Desafio do Loading]\r\n      </Widget.Content>\r\n    </Widget>\r\n  );\r\n}\r\n\r\nfunction QuestionWidget({\r\n  question,\r\n  questionIndex,\r\n  totalQuestions,\r\n  onSubmit,\r\n}) {\r\n  const questionId = `question__${questionIndex}`;\r\n  return (\r\n    <Widget>\r\n      <Widget.Header>\r\n        {/* <BackLinkArrow href=\"/\" /> */}\r\n        <h3>\r\n          {`Pergunta ${questionIndex + 1} de ${totalQuestions}`}\r\n        </h3>\r\n      </Widget.Header>\r\n\r\n      <img\r\n        alt=\"Descrição\"\r\n        style={{\r\n          width: '100%',\r\n          height: '150px',\r\n          objectFit: 'cover',\r\n        }}\r\n        src={question.image}\r\n      />\r\n      <Widget.Content>\r\n        <h2>\r\n          {question.title}\r\n        </h2>\r\n        <p>\r\n          {question.description}\r\n        </p>\r\n\r\n        <form\r\n          onSubmit={(infosDoEvento) => {\r\n            infosDoEvento.preventDefault();\r\n            onSubmit();\r\n          }}\r\n        >\r\n          {question.alternatives.map((alternative, alternativeIndex) => {\r\n            const alternativeId = `alternative__${alternativeIndex}`;\r\n            return (\r\n              <Widget.Topic\r\n                as=\"label\"\r\n                htmlFor={alternativeId}\r\n              >\r\n                <input\r\n                  // style={{ display: 'none' }}\r\n                  id={alternativeId}\r\n                  name={questionId}\r\n                  type=\"radio\"\r\n                />\r\n                {alternative}\r\n              </Widget.Topic>\r\n            );\r\n          })}\r\n\r\n          {/* <pre>\r\n            {JSON.stringify(question, null, 4)}\r\n          </pre> */}\r\n          <Button type=\"submit\">\r\n            Confirmar\r\n          </Button>\r\n        </form>\r\n      </Widget.Content>\r\n    </Widget>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}